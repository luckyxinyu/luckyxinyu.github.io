<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/02/03/hello-world/"/>
      <url>/2024/02/03/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="1、FAST-LIO简介"><a href="#1、FAST-LIO简介" class="headerlink" title="1、FAST_LIO简介"></a>1、FAST_LIO简介</h1><p>​FAST_LIO出自香港大学MaRS实验室，具有快速、鲁棒的特点，是当前表现最好的LIO算法之一。算法采用了紧耦合的迭代误差状态</p><p>卡尔曼滤波器（IESKF）来融合IMU和LIDAR的数据。FAST_LIO2在FAST_LIO1的基础上提出了ikdtree数据结构，可以实现快速最近邻查找</p><p>和增量式的地图更新。FAST_LIO的地图精度很高、计算速度很快。</p><ul><li>论文：</li></ul><p>FAST-LIO: A Fast, Robust LiDAR-inertial Odometry Package by Tightly-Coupled Iterated Kalman Filter（IEEE-RAL）</p><p>FAST-LIO2: Fast Direct LiDAR-inertial Odometry（TRO）</p><ul><li>视频：</li></ul><p><a href="https://www.youtube.com/watch?v=iYCY6T79oNU">FAST-LIO: A Fast, Robust LiDAR-inertial Odometry Package by Tightly-Coupled Iterated Kalman Filter - YouTube</a></p><p><a href="https://www.youtube.com/watch?v=2OvjGnxszf8">FAST-LIO2: Fast Direct LiDAR-inertial Odometry (youtube.com)</a></p><ul><li>代码：</li></ul><p><a href="https://github.com/hku-mars/FAST_LIO">hku-mars&#x2F;FAST_LIO: A computationally efficient and robust LiDAR-inertial odometry (LIO) package (github.com)</a></p><ul><li>另一个版本代码（S-FAST-LIO）：</li></ul><p><a href="https://github.com/zlwang7/S-FAST_LIO">zlwang7&#x2F;S-FAST_LIO: A simplified implementation of FAST_LIO (with Chinese note) (github.com)</a></p><h1 id="2、代码运行"><a href="#2、代码运行" class="headerlink" title="2、代码运行"></a>2、代码运行</h1><h2 id="2-1-FAST-LIO运行"><a href="#2-1-FAST-LIO运行" class="headerlink" title="2.1 FAST_LIO运行"></a>2.1 FAST_LIO运行</h2><ul><li><p>安装Livox-SDK</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/Livox-SDK/Livox-SDK</span><br><span class="line">cd Livox-SDK</span><br><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li><li><p>下载livox_ros_driver</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir fast_lio/src</span><br><span class="line">cd fast_lio/src</span><br><span class="line">git clone https://github.com/Livox-SDK/livox_ros_driver</span><br></pre></td></tr></table></figure></li><li><p>下载fast_lio</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hku-mars/FAST_LIO</span><br></pre></td></tr></table></figure></li><li><p>编译并运行</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ..</span><br><span class="line">catkin_make</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch fast_lio mapping_velodyne.launch</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-2-S-FAST-LIO运行"><a href="#2-2-S-FAST-LIO运行" class="headerlink" title="2.2 S-FAST_LIO运行"></a>2.2 S-FAST_LIO运行</h2><ul><li><p>安装Sophus</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/strasdat/Sophus.git</span><br><span class="line">cd Sophus</span><br><span class="line">git checkout a621ff</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ../ -DUSE_BASIC_LOGGING=ON</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li><li><p>下载livox_ros_driver</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir fast_lio/src</span><br><span class="line">cd fast_lio/src</span><br><span class="line">git clone https://github.com/Livox-SDK/livox_ros_driver</span><br></pre></td></tr></table></figure></li><li><p>下载s-fast_lio</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/zlwang7/S-FAST_LIO</span><br></pre></td></tr></table></figure></li><li><p>编译并运行</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ..</span><br><span class="line">catkin_make</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch fast_lio mapping_velodyne.launch</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-3-数据集下载"><a href="#2-3-数据集下载" class="headerlink" title="2.3 数据集下载"></a>2.3 数据集下载</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、Livox Avia Rosbag</span><br><span class="line">https://drive.google.com/drive/folders/1CGYEJ9-wWjr8INyan6q1BZz_5VtGB-fP</span><br><span class="line">https://drive.google.com/drive/folders/1EqNt6Bm_6Jf3beRf_RI3yrhiUCND09se</span><br><span class="line">2、RS-LiDAR Rosbag</span><br><span class="line">https://drive.google.com/drive/folders/1EqNt6Bm_6Jf3beRf_RI3yrhiUCND09se</span><br><span class="line">3、NCLT Dataset</span><br><span class="line">https://robots.engin.umich.edu/nclt/</span><br></pre></td></tr></table></figure><h1 id="3、基础知识"><a href="#3、基础知识" class="headerlink" title="3、基础知识"></a>3、基础知识</h1><h2 id="3-1-李群与李代数"><a href="#3-1-李群与李代数" class="headerlink" title="3.1 李群与李代数"></a>3.1 李群与李代数</h2><ul><li><p>李群：具有连续光滑性质的群，如旋转矩阵R（属于SO(3)群）、变换矩阵T（属于SE(3)群）</p></li><li><p>李代数：每一个李群都有其对应的李代数，李代数是李群在单位元出的切空间，是一种线性向量空间</p></li><li><p>李群与李代数之间的转换</p><p>  李群 —&gt; 李代数 对数映射 Log 取迹李群 &lt;— 李代数 指数映射 Exp 罗德里格斯公式</p></li></ul><img src="C:/Users/29611/AppData/Roaming/Typora/typora-user-images/image-20240206050341734.png" alt="image-20240206050341734" style="zoom: 67%;" /><ul><li><p>BCH近似公式：李群上矩阵的乘法 ≠ 李代数上的加法</p>  <img src="C:/Users/29611/AppData/Roaming/Typora/typora-user-images/image-20240206050818349.png" alt="image-20240206050818349" style="zoom:67%;" /></li></ul><img src="C:/Users/29611/AppData/Roaming/Typora/typora-user-images/image-20240206050932773.png" alt="image-20240206050932773" style="zoom:67%;" /><ul><li><p>SO(3)扰动模型求导：</p>  <img src="C:/Users/29611/AppData/Roaming/Typora/typora-user-images/image-20240206051234644.png" alt="image-20240206051234644" style="zoom:67%;" /></li></ul><h2 id="3-2-IMU传感器模型"><a href="#3-2-IMU传感器模型" class="headerlink" title="3.2 IMU传感器模型"></a>3.2 IMU传感器模型</h2><h2 id="3-3-LIDAR传感器模型"><a href="#3-3-LIDAR传感器模型" class="headerlink" title="3.3 LIDAR传感器模型"></a>3.3 LIDAR传感器模型</h2><h2 id="3-4-卡尔曼滤波器"><a href="#3-4-卡尔曼滤波器" class="headerlink" title="3.4 卡尔曼滤波器"></a>3.4 卡尔曼滤波器</h2><h1 id="4、论文讲解及公式推导"><a href="#4、论文讲解及公式推导" class="headerlink" title="4、论文讲解及公式推导"></a>4、论文讲解及公式推导</h1><h1 id="5、代码讲解"><a href="#5、代码讲解" class="headerlink" title="5、代码讲解"></a>5、代码讲解</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
